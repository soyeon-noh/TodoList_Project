/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-05-26 00:04:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/include_nav.jsp", Long.valueOf(1621987458505L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1621312030405L));
    _jspx_dependants.put("jar:file:/C:/bizworks/todo_list/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Server_PR_TodoList/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>TODOList 메인화면</title>\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/css/home.css?ver4\" rel=\"stylesheet\"/>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("  <body>\r\n");
      out.write("  \t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t* {\r\n");
      out.write("\t\tmargin: 0;\r\n");
      out.write("\t\tpadding: 0;\r\n");
      out.write("\t\tbox-sizing: border-box;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tdiv#date{\r\n");
      out.write("\t\tbackground-color: rgba(153, 131, 250, 20);\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("    h1.clock {\r\n");
      out.write("    \tdisplay: inline-block;\r\n");
      out.write("    \t\r\n");
      out.write("        color: black;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        padding: 1rem;\r\n");
      out.write("\t\t\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    h1.date {\r\n");
      out.write("    \tdisplay: inline-block;\r\n");
      out.write("    \t\r\n");
      out.write("     \tcolor: black;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("\t\tpadding: 1rem;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<h1>TO DO List</h1>\r\n");
      out.write("<div id=\"date\">\r\n");
      out.write("\t<h1 class=\"date\"></h1>\r\n");
      out.write("\t<h1 class=\"clock\"></h1>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction checkTime(i){\r\n");
      out.write("\t\tif(i< 10){\r\n");
      out.write("\t\t\ti = \"0\" + i;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn i;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tlet date = document.querySelector(\".date\");\r\n");
      out.write("\t\r\n");
      out.write("    function getDate(){\r\n");
      out.write("        const time = new Date();\r\n");
      out.write("        let year = time.getUTCFullYear();\r\n");
      out.write("        let month = time.getUTCMonth() + 1;\r\n");
      out.write("        let day = time.getUTCDate();\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        year = checkTime(year);\r\n");
      out.write("        month = checkTime(month);\r\n");
      out.write("        today = checkTime(day);\r\n");
      out.write("        \r\n");
      out.write("        date.textContent = year + \"-\" + month + \"-\" + day;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tlet clock = document.querySelector(\".clock\");\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getTime() {\r\n");
      out.write("\t\t  const time = new Date();\r\n");
      out.write("\t\t  let hour = time.getHours();\r\n");
      out.write("\t\t  let minutes = time.getMinutes();\r\n");
      out.write("\t\t  let seconds = time.getSeconds();\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  hour = checkTime(hour);\r\n");
      out.write("\t\t  minutes = checkTime(minutes);\r\n");
      out.write("\t\t  seconds = checkTime(seconds);\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  clock.textContent = hour + \":\" + minutes + \":\" + seconds;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction init() {\r\n");
      out.write("\t  setInterval(getTime, 1000);\r\n");
      out.write("\t  setInterval(getDate, 1000);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tinit();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <form class =\"v1\" method=\"POST\">\r\n");
      out.write("    \t<div>\r\n");
      out.write("    \t\t<label for=\"date\">작성일자</label>\r\n");
      out.write("    \t\t<input name=\"td_date\"\r\n");
      out.write("    \t\t\t\ttype=\"date\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t\r\n");
      out.write("    \t<div>\r\n");
      out.write("    \t\t<label for=\"time\">작성시각</label>\r\n");
      out.write("    \t\t<input name=\"td_time\"  \r\n");
      out.write("    \t\t\t\ttype=\"time\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_time}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t\r\n");
      out.write("    \t<div>\r\n");
      out.write("    \t\t<label for=\"todo\">할 일</label>\r\n");
      out.write("    \t\t<input name=\"td_todo\"\r\n");
      out.write("    \t\t\t\ttype=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_todo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t\r\n");
      out.write("    \t<div>\r\n");
      out.write("    \t\t<label for=\"place\">장소</label>\r\n");
      out.write("    \t\t<input name=\"td_place\"\r\n");
      out.write("    \t\t\t\ttype=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_place}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t<div>\r\n");
      out.write("   \t\t\t<button class=\"btn_insert\" type=\"button\">추가</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("    </form>\r\n");
      out.write("    \r\n");
      out.write("    <form class=\"select\" method=\"GET\">\r\n");
      out.write("    \t<input name=\"select_date\" type=\"date\">\r\n");
      out.write("    \t<button class=\"btn_select\" type=\"button\">\r\n");
      out.write("    \t\t검색\r\n");
      out.write("    \t</button>\r\n");
      out.write("    </form>\r\n");
      out.write("    \r\n");
      out.write("    <table id=\"tdlist\">\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>No.</th>\r\n");
      out.write("        <th>할 일</th>\r\n");
      out.write("        <th>작성일자</th>\r\n");
      out.write("        <th>장소</th>\r\n");
      out.write("        <th></th>\r\n");
      out.write("      </tr>\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("  </body>\r\n");
      out.write("  \r\n");
      out.write("  <script>\r\n");
      out.write("  // html 코드가 다 화면에 뜨고 나서 실행하라는 명렁\r\n");
      out.write("  // 아래 한 줄의 코드가 있어야 어디든디 script를 넣을 수 있다.\r\n");
      out.write("\tdocument.addEventListener(\"DOMContentLoaded\",function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tdocument.querySelector(\"form.v1\")\r\n");
      out.write("\t\t.addEventListener(\"click\", function(ev){\r\n");
      out.write("\t\t\tlet className = ev.target.className\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(className == \"btn_insert\"){\r\n");
      out.write("\t\t\t\tlet td_todo = document.querySelector(\"input[name='td_todo']\");\r\n");
      out.write("\t\t\t\tif(td_todo.value == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"할 일은 반드시 입력해야합니다\");\r\n");
      out.write("\t\t\t\t\ttd_todo.focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument.querySelector(\"form.v1\").submit();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tdocument.querySelector(\"form.select\")\r\n");
      out.write("\t\t.addEventListener(\"click\", function(ev){\r\n");
      out.write("\t\t\tlet className = ev.target.className\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(className == \"btn_select\"){\r\n");
      out.write("\t\t\t\tlet date = document.querySelector(\"input[name='select_date']\")\r\n");
      out.write("\t\t\t\t.value;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(date == \"\"){\r\n");
      out.write("\t\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t\t.location\r\n");
      out.write("\t\t\t\t\t.href= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t.location\r\n");
      out.write("\t\t\t\t.href= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" \r\n");
      out.write("\t\t\t\t\t\t+ \"/UD/select?td_date=\"\r\n");
      out.write("\t\t\t\t\t\t+ date;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tdocument.querySelector(\"table#tdlist\")\r\n");
      out.write("\t\t.addEventListener(\"click\", function(ev){\r\n");
      out.write("\t\t\tlet className = ev.target.className\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\tif(className == \"btn_delete\"){\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tlet seq = ev.target.dataset.seq\r\n");
      out.write("\t\t\t\talert(\"삭제가 완료되었습니다.\" + seq );\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t.location\r\n");
      out.write("\t\t\t\t.replace( \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" \r\n");
      out.write("\t\t\t\t\t\t+ \"/UD/delete?td_seq=\"\r\n");
      out.write("\t\t\t\t\t\t+ seq )\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t} else if(className == \"btn_update\"){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tlet seq = ev.target.dataset.seq;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t.location\r\n");
      out.write("\t\t\t\t.href= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" +\r\n");
      out.write("\t\t\t\t\t\t\"/UD/update?td_seq=\"\r\n");
      out.write("\t\t\t\t\t\t+ seq\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t})\r\n");
      out.write("  </script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/home.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/home.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/home.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("rootPath");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/home.jsp(66,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/home.jsp(66,6) '${TDLIST}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${TDLIST}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/home.jsp(66,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("TD");
      // /WEB-INF/views/home.jsp(66,6) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("i");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("        <tr>\r\n");
            out.write("          <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("          <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_todo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("          <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("          <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_place}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("          <td><button class=\"btn_update\" data-seq=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" type=\"button\">\r\n");
            out.write("          \t\t수정</button>\r\n");
            out.write("          \t\t<button class=\"btn_delete\" data-seq=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${TD.td_seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" type=\"button\">\r\n");
            out.write("          \t\t삭제</button></td>\r\n");
            out.write("        </tr>\r\n");
            out.write("      ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
